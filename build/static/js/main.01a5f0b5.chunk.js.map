{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","notesService","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01a5f0b5.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\"\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from \"react\"\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import React from \"react\"\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer\n","import axios from \"axios\"\nconst baseUrl = \"/api/notes\"\n\nconst getAll2 = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  }\n  return request.then((response) => response.data.concat(nonExisting))\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst notesService = { getAll, create, update }\n\nexport default notesService\n","import React, { useState, useEffect } from \"react\"\nimport Note from \"./components/Note\"\nimport Notification from \"./components/Notification\"\nimport Footer from \"./components/Footer\"\nimport noteService from \"./services/notes\"\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote(\"\")\n    })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((n) => (n.id !== id ? n : returnedNote)))\n      })\n      .catch((error) => {\n        setErrorMessage(`Note '${note.content}' was already removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>show {showAll ? \"important\" : \"all\"}</button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\nimport App from \"./App.js\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}